openapi: "3.0.2"

info:
  version: 1.0.0
  title: Схемы для работы с tag Payments

paths:

  /payments:
    get:
      summary: Получение списка платежей
      description: Поиск по платежам с фильтрацией. Каждый параметр добавляет новое ограничение к выборке, все указанные ограничения применяются одновременно.
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'api-type-library.yaml#/components/parameters/YoomoneyUserAgentMandatory'
        - name: shopId
          in: query
          required: true
          description: |
            Идентификатор магазина
          schema:
            type: string
        - name: limit
          in: query
          description: Количество элементов в выдаче.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            example: 50
            default: 10
        - name: after
          description: Токен запроса следующей страницы данных.
          in: query
          schema:
            $ref: 'api-type-library.yaml#/components/schemas/After'
        - name: paymentType
          description: Поиск по способу оплаты
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentType'
        - name: status
          description: Поиск по статусам платежа
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentStatus'
        - name: from
          description: Начало периода поиска по дате создания платежа включительно
          in: query
          required: false
          schema:
            type: string
            format: 'date-time'
        - name: till
          description: Конец периода поиска по дате создания платежа включительно
          in: query
          required: false
          schema:
            type: string
            format: 'date-time'
        - name: paymentSource
          description: Показывать платежи из указанных источников.
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentSource'
        - name: query
          description: Поисковый запрос, который ищет сразу по нескольким основным полям
          in: query
          required: false
          schema:
            type: string
        - name: rrn
          description: Поиск по Retrieval Reference Number, идентификатор авторизации банковской карты присвоенный банком-эмитентом карты
          in: query
          required: false
          schema:
            type: string
        - name: cardFirstNumbers
          description: Поиск по первым 6 цифр (БИН банка) номера карты для карточной операции
          in: query
          required: false
          schema:
            type: string
        - name: cardLastNumbers
          description: Поиск по последним 4 цифры номера карты для карточной операции
          in: query
          required: false
          schema:
            type: string
        - name: externalOperationId
          description: Поиск по номеру операции во внешней системе
          in: query
          required: false
          schema:
            type: string
        - name: amountMin
          description: Минимальная сумма платежа
          in: query
          required: false
          schema:
            type: string
        - name: amountMax
          description: Максимальная сумма платежа
          in: query
          required: false
          schema:
            type: string
        - name: walletNumber
          description: Поиск по номеру кошелька в ЯД
          in: query
          required: false
          schema:
            type: string
      tags:
        - Платежи
      security:
        - yooid:
            - merchant_dashboard:payment_info
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                title: GetPaymentsListResponse
                description: Ответ на получение списка платежей
                properties:
                  after:
                    $ref: 'api-type-library.yaml#/components/schemas/After'
                  items:
                    type: array
                    description: Список платежей
                    items:
                      $ref: '#/components/schemas/PaymentBrief'
                required:
                  - items
        400:
          $ref: 'api-type-library.yaml#/components/responses/ArgumentsError'
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationShopError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationCounterpartyError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /payments/(paymentId):
    get:
      summary: Получение информации о платеже
      description: Получение детальной информации по платежу используя его id
      tags:
        - Платежи
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: '#/components/parameters/PaymentId'
        - $ref: 'api-type-library.yaml#/components/parameters/YoomoneyUserAgentMandatory'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: 'api-type-library.yaml#/components/responses/ArgumentsError'
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationShopError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /payments/(paymentId)/capture:
    post:
      summary: Подтверждение платежа по его id
      tags:
        - Платежи
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'domain.yaml#/components/parameters/IdempotenceKey'
        - $ref: '#/components/parameters/PaymentId'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
        400:
          description: Запрос с указанными параметрами не может быть выполнен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsSyntaxError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsParametersError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsHeadersError'
                      - description: >
                          Невозможно подтвердить платеж с заданными параметрами.

                          Коды ошибок:

                            * RuleViolation - Отказ по правилам бизнес-логики:
                              * InvalidPaymentId - Платежа с заданным идентификатором не существует.
                              * InvalidPaymentStatus - Платеж с таким статусом нельзя подтвердить.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении операции - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - InvalidPaymentId
                              - InvalidPaymentStatus
                            example: InvalidPaymentId
                        required:
                          - type
                          - rule
                required:
                  - error
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationShopError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationCounterpartyError'
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /payments/(paymentId)/cancel:
    post:
      summary: Отмена платежа по его id
      tags:
        - Платежи
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'domain.yaml#/components/parameters/IdempotenceKey'
        - $ref: '#/components/parameters/PaymentId'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
        400:
          description: Запрос с указанными параметрами не может быть выполнен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsSyntaxError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsParametersError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsHeadersError'
                      - description: >
                          Невозможно отменить платеж с заданными параметрами.

                          Коды ошибок:

                            * RuleViolation - Отказ по правилам бизнес-логики:
                              * InvalidPaymentId - Платежа с заданным идентификатором не существует.
                              * InvalidPaymentStatus - Платеж с таким статусом нельзя отменить.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении операции - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - InvalidPaymentId
                              - InvalidPaymentStatus
                            example: InvalidPaymentId
                        required:
                          - type
                          - rule
                required:
                  - error
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationShopError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationCounterpartyError'
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

components:

  parameters:

    PaymentId:
      name: paymentId
      description: |
        Id платежа
      in: path
      required: true
      schema:
        type: string

  schemas:

    PaymentBrief:
      description: Краткая информация о платеже
      type: object
      properties:
        id:
          description: Id платежа
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        createdAt:
          description: Дата создания платежа
          type: string
          format: 'date-time'
          example: "2018-11-19T17:05:07Z"
        amount:
          $ref: 'api-type-library.yaml#/components/schemas/MonetaryAmount'
        type:
          $ref: '#/components/schemas/PaymentType'
        receiptStatus:
          $ref: '#/components/schemas/PaymentReceiptStatus'
        refundAvailability:
          $ref: 'refunds.yaml#/components/schemas/BriefRefundAvailability'
        cancelAvailability:
          $ref: '#/components/schemas/CancelPaymentAvailability'
        captureAvailability:
          $ref: '#/components/schemas/CapturePaymentAvailability'
        customerNumber:
          type: string
          description: Идентификатор клиента магазина
        protocol:
          x-one-of-name: Protocol
          oneOf:
            - $ref: '#/components/schemas/EmailProtocol'
            - $ref: '#/components/schemas/HttpProtocol'
            - $ref: '#/components/schemas/ApiV2Protocol'
            - $ref: '#/components/schemas/ApiV3Protocol'
            - $ref: '#/components/schemas/CustomProtocol'
      required:
        - id
        - status
        - createdAt
        - amount
        - type
        - refundAvailability
        - cancelAvailability
        - captureAvailability
        - protocol

    PaymentStatus:
      description: |
        статус платежа
        * Succeeded : Успешный платёж
        * Pending : Не оплачен
        * Processing : В обработке
        * RefundedPartially : Частичный возврат
        * Refunded : Возврат
        * Canceled : Отмена
        * Failed : Ошибка при оплате
        * WaitingForCapture : Ожидает подтверждения
        * Unknown : Неизвестен
      type: string
      enum:
        - Succeeded
        - Pending
        - Processing
        - RefundedPartially
        - Refunded
        - Canceled
        - Failed
        - WaitingForCapture
        - Unknown

    PaymentType:
      type: string
      enum:
        - YooMoney
        - YandexMoney
        - BankCard
        - MobileBalance
        - AlfaBank
        - WebMoney
        - Cash
        - Psb
        - Sberbank
        - SberbankBusiness
        - MasterPass
        - MPos
        - Qiwi
        - PayLate
        - KupiVKredit
        - TinkoffInvoicing
        - CashInCis
        - Erip
        - Installments
        - WeChat
        - Unknown
      description: |
        * YooMoney : ЮMoney
        * YandexMoney : Яндекс.Деньги
        * BankCard : Банковская карта
        * MobileBalance:  Баланс телефона
        * AlfaBank : Альфа-Клик
        * WebMoney :  Webmoney
        * Cash : Наличные
        * Psb : Промсвязьбанк
        * Sberbank : Cбербанк-онлайн
        * SberbankBusiness : Бизнес Cбербанк-онлайн
        * MasterPass : MasterPass
        * MPos : Мобильный терминал (mPOS)
        * Qiwi : QIWI кошелек
        * PayLate : PayLate
        * KupiVKredit : КупиВкредит
        * TinkoffInvoicing : Tinkoff
        * CashInCis : Наличные не в России
        * Erip : ЕРИП (Беларусь)
        * Installments : Заплатить по частям
        * WeChat : WeChat Pay
        * Unknown : Неизвестный тип
        Возможно появление новых способов оплаты. Рекоменуется задать текст и иконку по умолчанию.

    Payment:
      description: Платеж
      type: object
      properties:
        id:
          description: Id платежа
          type: string
          example: 12345
        status:
          $ref: '#/components/schemas/PaymentStatus'
        createdAt:
          description: Дата создания платежа
          type: string
          format: 'date-time'
          example: "2018-11-19T17:05:07Z"
        updatedAt:
          description: Дата изменения статуса платежа
          type: string
          format: 'date-time'
          example: "2018-11-19T17:05:07Z"
        customerNumber:
          type: string
          description: Идентификатор клиента магазина
        orderNumber:
          type: string
          description: Идентификатор заказа на стороне магазина
        amount:
          $ref: 'api-type-library.yaml#/components/schemas/MonetaryAmount'
        protocol:
          x-one-of-name: Protocol
          oneOf:
            - $ref: '#/components/schemas/EmailProtocol'
            - $ref: '#/components/schemas/HttpProtocol'
            - $ref: '#/components/schemas/ApiV2Protocol'
            - $ref: '#/components/schemas/ApiV3Protocol'
            - $ref: '#/components/schemas/CustomProtocol'
        method:
          x-one-of-name: PaymentMethod
          oneOf:
            - $ref: '#/components/schemas/YooMoneyPayment'
            - $ref: '#/components/schemas/YandexMoneyPayment'
            - $ref: '#/components/schemas/BankCardPayment'
            - $ref: '#/components/schemas/MobileBalancePayment'
            - $ref: '#/components/schemas/ExternalOperationPayment'
            - $ref: '#/components/schemas/AlternativePayment'
        receipt:
          $ref: '#/components/schemas/PaymentReceipt'
        refunds:
          type: array
          description: Список данных по возвратам
          items:
            $ref: 'refunds.yaml#/components/schemas/Refund'
        refundAvailability:
          $ref: 'refunds.yaml#/components/schemas/RefundAvailability'
        cancelAvailability:
          $ref: '#/components/schemas/CancelPaymentAvailability'
        captureAvailability:
          $ref: '#/components/schemas/CapturePaymentAvailability'
        errorCode:
          $ref: '#/components/schemas/PaymentErrorCode'
      required:
        - id
        - status
        - createdAt
        - amount
        - protocol
        - method
        - refunds
        - refundAvailability
        - cancelAvailability
        - captureAvailability

    Protocol:
      type: object
      description: Протокол подключения
      properties:
        type:
          type: string
          enum:
            - Email
            - Http
            - ApiV2
            - ApiV3
            - Custom
      discriminator:
        propertyName: type
        mapping:
          Email: '#/components/schemas/EmailProtocol'
          Http: '#/components/schemas/HttpProtocol'
          ApiV2: '#/components/schemas/ApiV2Protocol'
          ApiV3: '#/components/schemas/ApiV3Protocol'
          Custom: '#/components/schemas/CustomProtocol'

    ApiV2Protocol:
      allOf:
        - $ref: '#/components/schemas/Protocol'
      description: Данные специфичные для api v2 протокола
      type: object
      properties:
        type:
          type: string
          description: Тип протокола
          enum:
            - ApiV2
      required:
        - type

    ApiV3Protocol:
      allOf:
        - $ref: '#/components/schemas/Protocol'
      description: Данные специфичные для api v3 протокола
      type: object
      properties:
        type:
          type: string
          description: Тип протокола
          enum:
            - ApiV3
        description:
          type: string
          description: поле, которое содержит описание транзакции
      required:
        - type

    EmailProtocol:
      allOf:
        - $ref: '#/components/schemas/Protocol'
      description: Данные специфичные для email протокола
      type: object
      properties:
        type:
          type: string
          description: Тип протокола
          enum:
            - Email
        invoiceId:
          type: string
          description: Идентификатор платежа
      required:
        - type
        - invoiceId

    HttpProtocol:
      allOf:
        - $ref: '#/components/schemas/Protocol'
      description: Данные специфичные для http протокола
      type: object
      properties:
        type:
          type: string
          description: Тип протокола
          enum:
            - Http
        invoiceId:
          type: string
          description: Идентификатор платежа
      required:
        - type
        - invoiceId

    CustomProtocol:
      allOf:
        - $ref: '#/components/schemas/Protocol'
      description: Данные о специфичных протоколах или о созданных в будущем
      type: object
      properties:
        type:
          type: string
          description: Тип протокола
          enum:
            - Custom
      required:
        - type

    PaymentMethod:
      type: object
      description: Метод платежа
      properties:
        type:
          type: string
          enum:
            - YooMoney
            - YandexMoney
            - BankCard
            - MobileBalance
            - AlfaBank
            - WebMoney
            - Cash
            - Psb
            - Sberbank
            - Qiwi
            - CashInCis
            - Erip
            - SberbankBusiness
            - MasterPass
            - MPos
            - PayLate
            - KupiVKredit
            - TinkoffInvoicing
            - Installments
            - WeChat
            - Unknown
      discriminator:
        propertyName: type
        mapping:
          YooMoney: '#/components/schemas/YooMoneyPayment'
          YandexMoney: '#/components/schemas/YandexMoneyPayment'
          BankCard: '#/components/schemas/BankCardPayment'
          MobileBalance: '#/components/schemas/MobileBalancePayment'
          AlfaBank: '#/components/schemas/ExternalOperationPayment'
          WebMoney: '#/components/schemas/ExternalOperationPayment'
          Cash: '#/components/schemas/ExternalOperationPayment'
          Psb: '#/components/schemas/ExternalOperationPayment'
          Sberbank: '#/components/schemas/ExternalOperationPayment'
          Qiwi: '#/components/schemas/ExternalOperationPayment'
          CashInCis: '#/components/schemas/ExternalOperationPayment'
          Erip: '#/components/schemas/ExternalOperationPayment'
          SberbankBusiness: '#/components/schemas/AlternativePayment'
          MasterPass: '#/components/schemas/AlternativePayment'
          MPos: '#/components/schemas/AlternativePayment'
          PayLate: '#/components/schemas/AlternativePayment'
          KupiVKredit: '#/components/schemas/AlternativePayment'
          TinkoffInvoicing: '#/components/schemas/AlternativePayment'
          Installments: '#/components/schemas/AlternativePayment'
          WeChat: '#/components/schemas/AlternativePayment'
          Unknown: '#/components/schemas/AlternativePayment'

    YooMoneyPayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      description: Платеж в системе ЮMoney
      type: object
      properties:
        type:
          type: string
          enum: [ 'YooMoney' ]
        walletNumber:
          type: string
          description: Номер кошелька в ЮMoney
      required:
        - type

    YandexMoneyPayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      description: Платеж в системе Яндекс Деньги
      type: object
      properties:
        type:
          type: string
          enum: ['YandexMoney']
        walletNumber:
          type: string
          description: Номер кошелька в ЯД
      required:
        - type

    BankCardPayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      type: object
      description: Платеж банковской картой
      properties:
        type:
          type: string
          enum:
            - BankCard
        card:
          $ref: 'api-type-library.yaml#/components/schemas/BankCardPanFragment'
        rrn:
          type: string
          description: Retrieval Reference Number, идентификатор авторизации банковской карты присвоенный банком-эмитентом карты
      required:
        - type

    PaymentErrorCode:
      type: string
      enum:
        - PaymentExpired
        - IssuerUnavailable
        - GeneralDecline
        - CallCardIssuer
        - CardExpired
        - CardNotSupported
        - CardRestricted
        - FraudSuspected
        - CardLimitExceeded
        - CountryForbidden
        - 3dSecureFailed
        - InsufficientFunds
        - InvalidCardNumber
        - InvalidExpiryDate
        - InvalidCsc
        - CurrencyForbidden
      x-enum-varnames:
        - PAYMENT_EXPIRED
        - ISSUER_UNAVAILABLE
        - GENERAL_DECLINE
        - CALL_CARD_ISSUER
        - CARD_EXPIRED
        - CARD_NOT_SUPPORTED
        - CARD_RESTRICTED
        - FRAUD_SUSPECTED
        - CARD_LIMIT_EXCEEDED
        - COUNTRY_FORBIDDEN
        - THREE_D_SECURE_FAILED
        - INSUFFICIENT_FUNDS
        - INVALID_CARD_NUMBER
        - INVALID_EXPIRY_DATE
        - INVALID_CSC
        - CURRENCY_FORBIDDEN
      description: |
        Ошибки карточных операций. В качестве описания приведен текст ошибки.
         * PaymentExpired : Не удалось подтвердить оплату в срок. Покупатель может заплатить ещё раз.
         * IssuerUnavailable : Банк не отвечает. Если ошибка повторяется, напишите поддержке Кассы.
         * GeneralDecline : Этот способ оплаты отклонен. Можно заплатить другим способом.
         * CallCardIssuer : Платеж с этой карты отклонен. Покупатель может узнать подробности в банке
         * CardExpired : Истёк срок действия карты. Можно заплатить другой картой или другим способом.
         * CardNotSupported : Такие карты не принимаются. Покупатель может заплатить другим способом.
         * CardRestricted : Карта временно не работает. Покупатель может заплатить другим способом.
         * FraudSuspected : Платеж не прошел из-за подозрения в мошенничестве.
         * CardLimitExceeded : Карта достигла лимита (по карте или для вашего магазина). Покупатель может заплатить на следующий день
         * CountryForbidden : Нельзя заплатить картой, выпущенной в этой стране. Уточните настройки у поддержки Кассы.
         * 3dSecureFailed : Банк не подтвердил операцию из-за ошибки 3-D Secure. Покупатель может повторить попытку или уточнить в своем банке.
         * InsufficientFunds : Не хватает денег для оплаты. Покупатель может заплатить другим способом.
         * InvalidCardNumber : В номере карты ошибка. Покупатель может заплатить ещё раз.
         * InvalidExpiryDate : В сроке действия карты ошибка. Покупатель может заплатить ещё раз.
         * InvalidCsc : В коде CVC ошибка. Покупатель может заплатить ещё раз.
         * CurrencyForbidden : Некорректная валюта. Подробности у поддержки Кассы.

    MobileBalancePayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      type: object
      description: Платеж с баланса мобильного телефона
      properties:
        type:
          type: string
          enum:
            - MobileBalance
        phoneNumber:
          $ref: 'api-type-library.yaml#/components/schemas/Phone'
      required:
        - type

    ExternalOperationPayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      type: object
      description: Платеж с идентификатором внешней системы
      properties:
        type:
          type: string
          enum:
            - AlfaBank
            - WebMoney
            - Cash
            - Psb
            - Sberbank
            - Qiwi
            - CashInCis
            - Erip
        externalOperationId:
          type: string
          description: Идентификатор внешней системы
      required:
        - type

    AlternativePayment:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod'
      type: object
      description: Альтернативный платежный метод
      properties:
        type:
          type: string
          enum:
            - SberbankBusiness
            - MasterPass
            - MPos
            - PayLate
            - KupiVKredit
            - TinkoffInvoicing
            - Installments
            - WeChat
            - Unknown
      required:
        - type

    PaymentReceipt:
      type: object
      description: чек
      properties:
        customerContact:
          type: string
          description: Контактные данные о покупателе (телефон или email)
          example: my@yandex.ru
        status:
          $ref: '#/components/schemas/PaymentReceiptStatus'
        items:
          type: array
          description: Позиции в чеке
          items:
            $ref: '#/components/schemas/PaymentReceiptItem'
        amount:
          allOf:
            - $ref: 'api-type-library.yaml#/components/schemas/MonetaryAmount'
            - description: Сумма товарных позиций чека
        createdAt:
          type: string
          format: 'date-time'
          description: Дата создания чека
          example: "2018-11-19T17:05:07Z"
        registeredAt:
          type: string
          format: 'date-time'
          description: Дата и время формирования чека в фискальном накопителе.
          example: "2018-11-19T17:05:07Z"
        fiscalReceiptNumber:
          type: string
          description: Номер фискального документа.
          example: '3986'
        fiscalStorageNumber:
          type: string
          description: Номер фискального накопителя в кассовом аппарате.
          example: '9288000100115785'
        fiscalAttribute:
          type: string
          description: Фискальный признак чека. Формируется фискальным накопителем на основе данных, переданных для регистрации чека.
          example: '2617603921'
        fiscalProviderId:
          type: string
          description: Идентификатор чека в онлайн-кассе. Присутствует, если чек удалось зарегистрировать.
          example: 'fd9e9404-eaca-4000-8ec9-dc228ead2345'
      required:
        - customerContact
        - status
        - items
        - amount

    PaymentReceiptStatus:
      type: string
      enum:
        - Processing
        - Delivered
        - Fail
        - Unknown
      description: |
        Статус фискального чека
         * Processing : чек создан/отправлен
         * Delivered : чек доставлен;
         * Fail : не удалось доставить чек;
         * Unknown : статус неизвестен;

    PaymentReceiptItem:
      description: Позиция фискального чека
      type: object
      properties:
        text:
          type: string
          description:  Название позиции Deprecated! Скоро будет удалено, используйте поле description
          deprecated: true
          example: шампунь
        description:
          type: string
          description: Название позиции
          example: шампунь
        quantity:
          type: string
          description: Количество товара
        amount:
          allOf:
            - $ref: 'api-type-library.yaml#/components/schemas/MonetaryAmount'
            - description: Цена товара с учетом всех скидок и наценок
        vat:
          $ref: '#/components/schemas/VatCodeTitle'
        vatCode:
          $ref: 'domain.yaml#/components/schemas/VatCode'
      required:
        - text
        - description
        - quantity
        - amount

    CancelPaymentAvailability:
      description: Доступность отмены платежа
      type: object
      properties:
        enabled:
          description: Признак доступности операции отмены для текущего платежа
          type: boolean
      required:
        - enabled

    CapturePaymentAvailability:
      description: Доступность подтверждения платежа
      type: object
      properties:
        enabled:
          description: Признак доступности операции подтверждения для текущего платежа
          type: boolean
      required:
        - enabled

    VatCodeTitle:
      type: string
      example: "20%, 10/110"
      description: |
        Понятное для человека описание идентификатор ставки НДС.
        Например VatCode = 4 это 18% для товаров купленных до 1 января 2019г но 20% после 1 января 2019г
        Возможные значения:
        * '': Без НДС
        * '0%': НДС чека по ставке 0%
        * '10%': НДС чека по ставке 10%
        * '18%': НДС чека по ставке 18%
        * '20%': НДС чека по ставке 20%
        * '10/110': НДС чека по расчетной ставке 10/110
        * '18/118': НДС чека по расчетной ставке 18/118
        * '20/120': НДС чека по расчетной ставке 20/120



    PaymentSource:
      description: |
        Источники платежа
        Invoice - Операции по счетам
      type: string
      enum:
        - Invoice