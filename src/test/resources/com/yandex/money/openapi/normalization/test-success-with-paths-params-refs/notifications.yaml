openapi: "3.0.2"

info:
  version: 1.0.0
  title: Схемы для работы с tag Notifications

paths:

  /notifications/push:
    get:
      summary: Получение информации о push-уведомлениях пользователя для конкретного устройства
      description: Получение информации о push-уведомлениях пользователя для конкретного устройства
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - name: uuid
          description: Уникальный идентификатор (uuid) установки приложения на устройстве
          in: query
          example: 'd504eb582a082fbd05680cd482d27beb'
          required: true
          schema:
            $ref: '#/components/schemas/InstallationIdentifier'
      tags:
        - Нотификации
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationSettings'
        400:
          description: Запрос с указанными параметрами не может быть выполнен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsSyntaxError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsParametersError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsHeadersError'
                      - description: >
                          Невозможно получить информацию о push-уведомлениях пользователя:

                          Коды ошибок:

                          * RuleViolation - Отказ по правилам бизнес-логики:
                            * NoPushNotificationSettingsFound - Не найдена информация о настройках push-уведомлений для заданного устройства пользователя.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении операции - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - NoPushNotificationSettingsFound
                            example: NoPushNotificationSettingsFound
                        required:
                          - type
                          - rule
                required:
                  - error
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /notifications/push/subscribe:
    post:
      summary: Регистрация приложения в сервисе push-уведомлений.
      description: Регистрация приложения в сервисе push-уведомлений. При обновлении регистрации в APNS/FCM нужно повторно вызывать данный метод.
      tags:
        - Нотификации
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'domain.yaml#/components/parameters/IdempotenceKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationSubscribeRequest'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
        400:
          $ref: 'api-type-library.yaml#/components/responses/ArgumentsError'
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /notifications/push/unsubscribe:
    post:
      summary: Отписка устройста пользователя от push-уведомлений.
      description: Отписка устройста пользователя от push-уведомлений. Необходимо вызывать метод перед разлогином из приложения.
      tags:
        - Нотификации
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'domain.yaml#/components/parameters/IdempotenceKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationUnsubscribeRequest'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
        400:
          $ref: 'api-type-library.yaml#/components/responses/ArgumentsError'
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

  /notifications/push/update:
    post:
      summary: Изменение настроек push-уведомлений для конкретного устройства пользователя
      description: Изменение настроек push-уведомлений для конкретного устройства пользователя
      tags:
        - Нотификации
      parameters:
        - $ref: 'domain.yaml#/components/parameters/PassportAuthorization'
        - $ref: 'domain.yaml#/components/parameters/Authorization'
        - $ref: 'domain.yaml#/components/parameters/IdempotenceKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationsUpdateRequest'
      security:
        - yooid:
            - merchant_dashboard:profile
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
        400:
          description: Запрос с указанными параметрами не может быть выполнен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsSyntaxError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsParametersError'
                      - $ref: 'api-type-library.yaml#/components/schemas/ArgumentsHeadersError'
                      - description: >
                          Невозможно измененить настройки push-уведомлений для конкретного устройства пользователя:

                          Коды ошибок:

                          * RuleViolation - Отказ по правилам бизнес-логики:
                            * NoPushNotificationSettingsFound - Не найдена информация о настройках push-уведомлений для заданного устройства пользователя.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении операции - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - NoPushNotificationSettingsFound
                            example: NoPushNotificationSettingsFound
                        required:
                          - type
                          - rule
                required:
                  - error
        401:
          $ref: 'domain.yaml#/components/responses/AuthenticationError'
        403:
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: 'domain.yaml#/components/schemas/PermissionsCommonError'
                      - $ref: 'domain.yaml#/components/schemas/PermissionRulesViolationUserError'
                required:
                  - error
        500:
          $ref: 'api-type-library.yaml#/components/responses/TechnicalError'

components:

  schemas:

    PushNotificationSubscribeRequest:
      description: Информация для создания подписки на push-уведомления
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/InstallationIdentifier'
        applicationIdentifier:
          description: Идентификатор приложения, для которого создается подписка
          type: string
          minLength: 1
          example: 'ru.yandex.checkout.release'
        notificationToken:
          description: Токен для отправки push-уведомлений
          type: string
          example: '3aeb3b8461b82cd6dd65b15ab2abfa70a7883c4ea125b89b01166686d1a7b357'
          minLength: 1
        notificationClientType:
          $ref: '#/components/schemas/NotificationClientType'
        allowableNotificationTypes:
          description: Список поддерживаемых типов push-уведомлений для клиента
          type: array
          items:
            $ref: '#/components/schemas/PushNotificationTypes'
      required:
        - uuid
        - applicationIdentifier
        - notificationToken
        - notificationClientType
        - allowableNotificationTypes

    PushNotificationUnsubscribeRequest:
      description: Отписка устройста пользователя от push-уведомлений
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/InstallationIdentifier'
      required:
        - uuid

    PushNotificationsUpdateRequest:
      description: Запрос на обновление настроек push-уведомлений для конкретного устройства пользователя.  Если отправляется null значение какой-либо настройки, её значение не изменяется.
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/InstallationIdentifier'
        sendPushNotificationOnInvoicePayment:
          description: Необходимо ли отправлять push-уведомление при оплате выставленного счета
          type: boolean
          example: true
        sendPushNotificationOnSuccessfulPayment:
          description: Необходимо ли отправлять push-уведомление при успешном платеже в магазин
          type: boolean
          example: true
      required:
        - uuid

    PushNotificationSettings:
      description: |
        Доступные настройки для пользователя
        * `sendPushNotificationOnInvoicePayment` - указывает, что пользователю нужно посылать пуш уведомления при оплате счета
        * `sendPushNotificationOnSuccessfulPayment` - указывает, что пользователю нужно посылать пуш уведомления при успешном платеже в
        магазин пользователя
      type: object
      properties:
        sendPushNotificationOnInvoicePayment:
          type: boolean
        sendPushNotificationOnSuccessfulPayment:
          type: boolean
      required:
        - sendPushNotificationOnInvoicePayment
        - sendPushNotificationOnSuccessfulPayment

    PushNotificationTypes:
      type: string
      enum:
        - OnInvoicePayment
        - OnSuccessfulPayment
      description: |
        * OnInvoicePayment : отправка push-уведомлений при оплате счета
        * OnSuccessfulPayment : отправка push-уведомлений при успешном платеже в магазин


    InstallationIdentifier:
      type: string
      description: Уникальный идентификатор (uuid) установки приложения на устройстве
        Получать вызовом к [/installation-identifier](https://bitbucket.yooteam.ru/pages/API/api-guidelines/master/browse/resources/swagger-ui.html?url=https://bitbucket.yooteam.ru//pages/API/user-auth-center-api-specification/master/browsespecification/user-auth-center-mobile-api.yaml&title=user-auth-center-mobile-api#/default/get_installation_identifier)
      minLength: 1
      example: 'd504eb582a082fbd05680cd482d27beb'

    NotificationClientType:
      type: string
      enum:
        - FCM
        - APNS
      description: |
        Тип клиента:
        * FCM : Firebase Cloud Messaging
        * APNS : Apple Push Notification Service
