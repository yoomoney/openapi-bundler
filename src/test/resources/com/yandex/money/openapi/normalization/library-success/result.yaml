info:
  version: 1.0.0
components:
  parameters:
    AcceptLanguage:
      name: Accept-Language
      in: header
      example: en
      description: |-
        Код языка, на котором клиент хочет получить ответ, в соответствии с:
          - [RFC-5646: Tags for Identifying Languages](https://tools.ietf.org/html/rfc2616#section-14.4)
          - [IANA Language Subtag Registry](http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry)
      schema:
        type: string
    YamoneyMobileUserAgent:
      in: header
      name: User-Agent
      required: false
      pattern: (.+)\/([0-9.]+)\s(.+)\/([0-9.]+)\s(.+)
      description: |-
        Информация о приложении или SDK, его версии и платформе устройства.
        Формат: \<application name>.\<target platform>/\<application version> \<running platform>/\<OS version> \<device class>
      schema:
        type: string
        example: 'Yandex.Money.Android/4.17.1 Android/8.0 Phone'
      examples:
        example1:
          value: Yandex.Money.Android/4.17.1 Android/8.0 Phone
          summary: Yandex.Money version 4.17.1 for Android used with Android Phone version 8.1
        example2:
          value: Yandex.Fines.iOS/2.1.1 iOS/11.3 Tablet
          summary: Yandex.Fines version 2.1.1 for iOS used with iOS Tablet version 11.3
        example3:
          value: Yandex.Money.Android/4.17.1 Windows/10.1709 Phone
          summary: Yandex.Money version 4.17.1 for Android used with Windows Phone version 10.1709
    Limit:
      name: limit
      in: query
      description: Максимальное количество записей в выдаче.
      type: number
      default: 10
    After:
      name: after
      in: query
      description: Токен запроса следующей страницы данных.
      type: string
    IfNoneMatch:
      in: header
      required: false
      name: If-None-Match
      schema:
        type: string
        example: 'sdf12331'
      description: |
        [ETag из предыдущего ответа сервера](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)
    ETag:
      in: header
      required: false
      name: If-None-MatchETag
      schema:
        type: string
        example: 'W/\"b63802dff0dc93a2bc5af99c857a3f909aab95092face001b77ba6742cdb600e\"'
      description: |
        Версия (хеш от тела) текущего ответа [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)
    IfModifiedSince:
      name: If-Modified-Since
      in: header
      description: Сохранённое значение Last-Modified. в формате "EEE, dd MMM yyyy HH:mm:ss zz" (https://tools.ietf.org/html/rfc7231#section-7.1.1.1)
      schema:
        type: string
        example: 'Tue, 09 Oct 2015 07:28:20 GMT'
  schemas:
    Phone:
      description: Номер телефона в формате ITU-T E.164
      type: string
      pattern: '[0-9]{4,15}'
      example: '79000000000'
    After:
      title: Токен запроса следующей страницы данных.
      type: string
      example: '01234567890ABCDEF'
    CurrencyCode:
      description: Код валюты, ISO-4217 3-alpha currency symbol.
      type: string
      pattern: '[A-Z]{3}'
      example: 'RUB'
    Amount:
      description: Числовое значение, для сумм без валюты, например для бонусных баллов.
      type: object
      properties:
        value:
          description: Десятичное число с фиксированной точкой в строковом представлении.
          type: string
          pattern: (\d+\.\d{2}|\d+)
          example: '100.00'
      required:
        - value
    MonetaryAmount:
      description: Сумма в выбранной валюте.
      type: object
      properties:
        value:
          description: Сумма, десятичное число с фиксированной точкой в строковом представлении.
          type: string
          pattern: (\d+\.\d{2}|\d+)
          example: '10.00'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
      required:
        - value
        - currency
    BankCardType:
      description: Тип банковской карты.
      type: string
      enum:
        - MasterCard
        - Maestro
        - Visa
        - Mir
        - UnionPay
        - JCB
        - AmericanExpress
        - Unknown
      example: 'MasterCard'
    Number:
      description: Номер банковской карты.
      type: string
      pattern: '[0-9]{16,19}'
      example: '5105105105105100'
    ExpiryYear:
      description: Срок действия, год, YY.
      type: string
      pattern: '[0-9]{2}'
      example: '20'
    ExpiryMonth:
      description: Срок действия, месяц, MM.
      type: string
      pattern: '[0-9]{2}'
      example: '07'
    Csc:
      description: Код CVC2 или CVV2, 3 или 4 символа, печатается на обратной стороне карты.
      type: string
      pattern: '[0-9]{3,4}'
      example: '012'
    PanFragment:
      title: Неполный номер банковской карты
      description: Объект содержит в себе частичную информацию о номере банковской карты
      type: object
      properties:
        first:
          description: Первые шесть цифр карты
          type: string
          pattern: '[0-9]{6}'
          example: '410056'
        last:
          description: Последние четыре цифры карты
          type: string
          pattern: '[0-9]{4}'
          example: '5604'
        length:
          description: Общее количество цифр в номере карты
          type: integer
          format: int32
          minimum: 16
          maximum: 19
          example: 16
      required:
        - first
        - last
        - length
    Cache-Control:
      schema:
        type: string
        enum:
          - private
      description: |
        Фиксированное значение: private, указание на то что данные должны быть сохранены в кэше клиента и не должны сохраняться на прокси-серверах.
    ETag:
      schema:
        type: string
        example: 'W/\"b63802dff0dc93a2bc5af99c857a3f909aab95092face001b77ba6742cdb600e\"'
      description: |
        Версия (хеш от тела) запрашиваемого ресурса [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)
    Expires:
      schema:
        type: string
        format: date-time
        example: 'Tue, 18 Dec 2018 16:12:28 GMT'
      description: |
        Время, до достижении которого данные считаются действительными (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
    Last-Modified:
      schema:
        type: string
        format: date-time
        example: 'Tue, 08 Dec 2018 16:12:28 GMT'
      description: |
        Временная метка последнего изменения сущности (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
    ArgumentsError:
      description: |
        Операция с указанными параметрами не может быть совершена:
        * отсутствуют обязательные параметры запроса или они имеют недопустимые значения;
        * отсутствуют обязательные HTTP-заголовки запроса или они имеют недопустимое значение;
        * формат запроса содержит синтаксические ошибки;

        Коды ошибок:
        * SyntaxError - Нарушен синтаксис запроса, запрос невозможно разобрать.
        * IllegalParameters - Параметры запроса отсутствуют или имеют недопустимое значение.
        * IllegalHeaders - HTTP-заголовоки запроса отсутствуют или имеют недопустимое значение.
      type: object
      properties:
        type:
          description: Код ошибки.
          type: string
          enum:
            - SyntaxError
            - IllegalParameters
            - IllegalHeaders
          example: 'IllegalParameters'
        parameterNames:
          description: Список наименований и путей параметров, содержащих некорректные значения. Присутствует при type=IllegalParameters.
          type: array
          items:
            type: string
            example: 'amount'
            description: |
              Имя параметра включая его полный путь в JSON документе. Поле вложенного объекта указывается через точку. Номер элемента списка указывается в квадратных скобках.
              Примеры:

                * currency
                * amount.value
                * options[0].amount.value
        headerNames:
          description: Список наименований заголовков запроса, содержащих некорректные значения. Присутствует при type=IllegalHeaders.
          type: array
          items:
            type: string
            example: 'Authorization'
      required:
        - type
    PermissionsError:
      description: |
        Запрос не может быть выполнен — Клиент не обладает достаточными правами, или состояние учетной записи клиента не позволяет совершить операцию.

        Коды ошибок:
        * InvalidScope - Указанная авторизация клиента не обладает достаточными правами для совершения этой операции.
      type: object
      properties:
        type:
          type: string
          enum:
            - InvalidScope
          example: 'InvalidScope'
      required:
        - type
  responses:
    NotModifiedTime:
      description: |
        Запрос выполнен успешно. Данные не изменялись.
      headers:
        Cache-Control:
          $ref: '#/components/schemas/Cache-Control'
        Expires:
          $ref: '#/components/schemas/Expires'
        Last-Modified:
          $ref: '#/components/schemas/Last-Modified'
    NotModifiedETag:
      description: |
        Запрос выполнен успешно. Данные не изменялись.
      headers:
        Cache-Control:
          $ref: '#/components/schemas/Cache-Control'
        Expires:
          $ref: '#/components/schemas/Expires'
        ETag:
          $ref: '#/components/schemas/ETag'
    Accepted:
      description: |
        Запрос принят в обработку но результат его выполнения неизвестен.
        Клиенту следует повторить запрос с теми же аргументами спустя указанное в ответе время.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    description: Код состояния.
                    type: string
                    enum:
                      - ProcessingRequest
                    example: 'ProcessingRequest'
                  retryAfter:
                    description: Рекомендуемое количество миллисекунд, спустя которое следует повторить запрос.
                    type: integer
                    format: int64
                    example: 5000
                    minimum: 10
                required:
                  - type
                  - retryAfter
            required:
              - error
    ArgumentsError:
      description: Запрос с указанными параметрами не может быть выполнен.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ArgumentsError'
    AuthenticationError:
      description: |
        Запрос не может быть выполнен — ошибка аутентификационных данных клиента.

        Коды ошибок:
        * InvalidCredentials - Отсутствуют или недействительны данные Basic-авторизации запроса.
        * InvalidToken - Отсутствует или недействительна OAuth2 авторизация кошелька.
        * InvalidSignature - Отсутствует или неверна электронная подпись запроса.
        * InvalidInstanceId - Отсутствует или недействителен уникальный идентификатор установки приложения.
      headers:
        WWW-Authenticate:
          schema:
            type: string
            default: Bearer realm="API", error="invalid_token"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    description: Код ошибки.
                    type: string
                    enum:
                      - InvalidCredentials
                      - InvalidToken
                      - InvalidSignature
                      - InvalidInstanceId
                    example: 'InvalidCredentials'
                required:
                  - type
            required:
              - error
    PermissionsError:
      description: Ответ о запрете выполнения запроса.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/PermissionsError'
            required:
              - error
    NotFoundError:
      description: |
        Запрашиваемый объект или ресурс не найден.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    description: Код ошибки.
                    type: string
                    enum:
                      - NotFound
                    example: 'NotFound'
                required:
                  - type
            required:
              - error
    TooManyRequestsError:
      description: |
        Превышено разрешенное количество запросов в единицу времени. Запрос отвергнут.
        Клиенту следует:
        * Отправить следующий запрос не ранее чем спустя время retryAfter;
        * Cнизить общее количество запросов к серверу в единицу времени.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    description: Код ошибки.
                    type: string
                    enum:
                      - TooManyRequests
                    example: 'TooManyRequests'
                  retryAfter:
                    description: Рекомендуемое количество миллисекунд, спустя которое следует повторить запрос.
                    type: integer
                    format: int64
                    example: 5000
                    minimum: 10
                required:
                  - type
                  - retryAfter
            required:
              - error
    TechnicalError:
      description: |
        Техническая ошибка. Результат выполнения запроса неизвестен.
        Клиенту следует повторить запрос с теми же аргументами спустя указанное время ожидания.

        Коды ошибок:
        * TechnicalError - Техническая ошибка сервиса.
        * ServiceUnavailable - Сервис временно недоступен.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    description: Код ошибки
                    type: string
                    enum:
                      - TechnicalError
                      - ServiceUnavailable
                    example: 'TechnicalError'
                  retryAfter:
                    description: Рекомендуемое количество миллисекунд, спустя которое следует повторить запрос.
                    type: integer
                    format: int64
                    example: 5000
                    minimum: 10
                  description:
                    description: Дополнительное текстовое пояснение причины ошибки. Может присутствовать в некоторых случаях.
                    type: string
                    example: Съешь еще этих мягких французских булок
                required:
                  - type
            required:
              - error
