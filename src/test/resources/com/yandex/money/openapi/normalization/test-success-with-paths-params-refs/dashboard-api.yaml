openapi: "3.0.1"
info:
  version: 4.0.4
  title: YooMoney Dashboard API
  description: |
    # Функции для работы с Личным Кабинетом.
      * [LK-mobile.Intro](https://wiki.yamoney.ru/display/ProSheet/LK-mobile.Intro)
    ## Глоссарий основных сущностей сервиса:

    * <b>User</b> - Пользователь Личного Кабинета.
    * <b>Counterparty</b> - Информации об аккаунте пользователя в Личном Кабинете. Аккаунт готов к приему платежей (находится в статусе ONLINE). У компании всегда есть один владелец (owner), несколько магазинов, шлюзов, пользователей.
    * <b>Invoice</b> - Счет, выставленный пользователем Личного Кабинета.
    * <b>Catalog</b> - Каталог продуктов, плательщиков, в котором хранится информация о сохраненных продуктах и плательщиках.
    * <b>Product</b> - Шаблон продукта, хранящегося в каталоге продуктов и плательщиков.
    * <b>Payer</b> - Шаблон плательщика, хранящегося в каталоге продуктов и плательщиков.
    * <b>ShopCapabilities</b> - Объект отражает доступность связанной с магазинами функциональности
    * <b>UserCapabilities</b> - Объект отражает доступность общей функциональности для всех магазинов и шлюзов в разрезе пользователя и
        организации
    * <b>Payment</b> - Платеж в магазин контрагента

    ## Идемпотентность

    В контексте API [идемпотентность](https://tools.ietf.org/html/rfc7231#section-4.2.2) означает,
    что многократные запросы обрабатываются так же, как однократные.

    Это значит, что получив повторный запрос с теми же параметрами, ЮKassa выдаст в ответе результат исходного запроса (если запрос выполнен) или статус **в обработке** (если запрос еще выполняется).

    Такое поведение помогает избежать нежелательного повторения транзакций. Например, если при проведении платежа возникли проблемы с сетью и соединение прервалось, вы сможете безопасно повторить нужный запрос неограниченное количество раз.

    `GET`-запросы являются по умолчанию идемпотентными, так как не имеют нежелательных последствий.

    Для обеспечения идемпотентности `POST`-запросов используется заголовок `Idempotence-Key` (или **ключ идемпотентности**).

    Как это работает:

    - если вы повторяете запрос с теми же данными и тем же ключом, API обрабатывает его как повторный;
    - если данные в запросе те же, а ключ идемпотентности отличается, запрос выполняется как новый.
    - если данные в запросе отличаются, а ключ идемпотентности тот же, запрос выполняется с ошибкой аргумента (ключа идемпотентности).

    В заголовке `Idempotence-Key` можно передавать любое значение, уникальное для этой операции на вашей стороне. Мы рекомендуем использовать [V4 UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_.28random.29).

    ЮKassa обеспечивает идемпотентность в течение 1 часа после первого запроса, потом повторный запрос будет обработан как новый.

    ## Авторизация и аутентификация
    Для авторизации и аутентификации пользователя ипользуются OAuth 2.0 токены из заголовков: Passport-Authorization и Authorization.
    В заголовке Passport-Authorization ожидается токен, выпущенный OAuth-сервером Яндекса.
    В заголове Authorization ожидается токен, выпущенный собственным центром авторизации.

    Для авторизации и аутентификации пользователя должен присутствовать хотя бы один их заголовков: Passport-Authorization и Authorization.
    В случае если в запросе переданы оба заголовка, для авторизации и аутентификации используется заголовок собственного
    центра авторизации Authorization.
    Если запрос требует авторизации и аутентификации пользователя и оба заголовока отсутствуют, возвращется ответ с HTTP кодом 401 и кодом
    ошибки InvalidToken.

  contact:
    name: Kobyshev Sergey
    email: kobyshevss@yamoney.ru

servers:
  - url: https://kassa.yandex.ru/api/dashboard/v1
  - url: https://yookassa.ru/api/merchant-profile/v1

tags:
  - name: Пользователь
  - name: Платежи
  - name: Возвраты
  - name: Счета
  - name: Каталог
  - name: Нотификации
  - name: Доступная функциональность
  - name: Чат с поддержкой

paths:

  /refunds:
    $ref: 'refunds.yaml#/paths/~1refunds'

  /refunds/{refundId}:
    $ref: 'refunds.yaml#/paths/~1refunds~1{refundId}'

  /notifications/push:
    $ref: 'notifications.yaml#/paths/~1notifications~1push'
