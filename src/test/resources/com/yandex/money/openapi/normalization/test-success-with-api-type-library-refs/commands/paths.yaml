openapi: "3.0.2"

info:
  version: 1.0.0
  title: Подключаемые типы


paths:

  /transfers:
    post:
      summary: Проведение перевода
      description: |
        Проведение перевода, включая процессы подтверждения перевода отправителем.
        Метод идемпотентен по значению transferToken.
      parameters:
        - $ref: '../domain/type-library.yaml#/components/parameters/After'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transferToken:
                  $ref: '../specification.yaml#/components/schemas/TransferToken'
                after:
                  $ref: '../domain/type-library.yaml#/components/schemas/After'
              required:
                - transferToken
      responses:
        '200':
          description: Запрос успешно выполнен. Результат и шаг процесса проведения перевода отражает значение поля status ответа.
          content:
            application/json:
              schema:
                $ref: '../specification.yaml#/components/schemas/Transfer'
        '202':
          $ref: '../domain/Domain.yaml#/components/responses/Accepted'
        '400':
          $ref: '../domain/Domain.yaml#/components/responses/ArgumentsError'
        '401':
          $ref: '../domain/Domain.yaml#/components/responses/AuthenticationError'
        '403':
          $ref: '../domain/Domain.yaml#/components/responses/PermissionsError'
        '429':
          $ref: '../domain/Domain.yaml#/components/responses/TooManyRequestsError'
        '500':
          $ref: '../domain/Domain.yaml#/components/responses/TechnicalError'

  /transfer-options:
    get:
      summary: Запрос доступных способов совершения перевода
      description: |
        Метод отображает доступные способы совершения перевода для указанного типа получателя.
        Метод не сохраняет состояние на сервере.

        ### Назначение:
        * Если необходимо узнать возможные способы совершения перевода указанному получателю.
        * Используется по желанию клиента (необязательный).
      parameters:
        - name: amount
          description: Сумма перевода, десятичное число с фиксированной точкой в строковом представлении.
          in: query
          required: true
          schema:
            type: string
            example: '10.00'
        - name: currency
          description: ISO-4217 3-alpha символьный код валюты перевода.
          in: query
          required: true
          schema:
            $ref: 'http://localhost:8888/domain.yaml#/components/schemas/CurrencyCode'
      responses:
        '200':
          description: |
            Список доступных способов совершения перевода.
            Если нет ни одного подходящего способа, список будет пустым.
            Каждый элемент списка содержит тип источника совершения перевода (SourceType) и список способов подтверждения перевода (СonfirmationType).
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    description: Доступные способы совершения перевода
                    type: array
                    items:
                      oneOf:
                        - $ref: '../specification.yaml#/components/schemas/TransferOption'
                required:
                  - items
        '400':
          $ref: '../domain/Domain.yaml#/components/responses/ArgumentsError'
        '401':
          $ref: '../domain/Domain.yaml#/components/responses/AuthenticationError'
        '403':
          $ref: '../domain/Domain.yaml#/components/responses/PermissionsError'
        '429':
          $ref: '../domain/Domain.yaml#/components/responses/TooManyRequestsError'
        '500':
          $ref: '../domain/Domain.yaml#/components/responses/TechnicalError'

  /tokens:
    post:
      summary: Сохранение и проверка данных отправителя, получателя и параметров перевода, формирование токена для последующего проведения перевода
      description: |
        Сохранение и проверка данных отправителя, получателя и параметров перевода, формирование токена для последующего проведения перевода
        Метод не совершает действий процесса перевода, а лишь проверяет на корректность и сохраняет платежные данные отправителя, формируя контекст перевода (TransferToken).
        Повторные вызовы этого метода будут порождать новые экземпляры TransferToken.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  allOf:
                    - $ref: 'http://localhost:8888/domain.yaml#/components/schemas/MonetaryAmount'
                    - description: Сумма перевода, сумма к получению.
                message:
                  description: Сообщение получателю, можно указать для перевода любого типа кроме пополнения собственного кошелька.
                  type: string
                  maxLength: 200
              required:
                - amount
      responses:
        '200':
          description: Данные перевода проверены и сохранены успешно.
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferToken:
                    $ref: '../specification.yaml#/components/schemas/TransferToken'
                  charge:
                    allOf:
                      - $ref: 'http://localhost:8888/domain.yaml#/components/schemas/MonetaryAmount'
                      - description: MonetaryAmount, сумма к оплате отправителем.
                  fee:
                    allOf:
                      - $ref: '../specification.yaml#/components/schemas/Fee'
                      - description: Комиссия с отправителя сверх суммы перевода. Поле присутствует в случае наличия комиссий сверх суммы перевода.
                required:
                  - transferToken
        '400':
          description: Запрос с указанными параметрами не может быть выполнен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '../domain/Domain.yaml#/components/schemas/ArgumentsError'
                      - title: ValidationRulesViolationError
                        description: >
                          Перевод с указанными параметрами не может быть совершен:

                          * получатель перевода не существует, недоступен или не может быть однозначено определен.

                          Коды ошибок:

                          * RuleViolation - Отказ по правилам бизнес-логики:
                              * RecipientNotFound - Получатель перевода не существует или заблокирован.
                              * RecipientAmbiguity - Невозможно однозначно определить получателя перевода, указанным данным соответствует несколько кошельков.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении перевода - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - RecipientNotFound
                              - RecipientAmbiguity
                            example: RecipientAmbiguity
                        required:
                          - type
                          - rule
                required:
                  - error
        '401':
          $ref: '../domain/Domain.yaml#/components/responses/AuthenticationError'
        '403':
          description: Ответ о запрете выполнения запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '../domain/Domain.yaml#/components/schemas/PermissionsError'
                      - title: AuthenticationRulesViolationError
                        description: >
                          Перевод с указанного кошелька не может быть совершен:

                          * Кошелек отправителя перевода заблокирован.

                          Коды ошибок:

                          * RuleViolation - Отказ по правилам бизнес-логики:
                              * SourceWalletBlocked - Кошелек отправителя перевода заблокирован.
                        type: object
                        properties:
                          type:
                            description: Причина отказа в проведении перевода - правило бизнес-логики.
                            type: string
                            enum:
                              - RuleViolation
                            example: RuleViolation
                          rule:
                            description: Код правила бизнес-логики.
                            type: string
                            enum:
                              - SourceWalletBlocked
                            example: SourceWalletBlocked
                          resolveUrl:
                            description: >
                              URL страницы, на которую следует отправить пользователя для разрешения причин отказа в проведении перевода. Присутствует при type=SourceWalletBlocked.
                            type: string
                        required:
                          - type
                          - rule
                required:
                  - error
        '429':
          $ref: '../domain/Domain.yaml#/components/responses/TooManyRequestsError'
        '500':
          $ref: '../domain/Domain.yaml#/components/responses/TechnicalError'
